//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryApp.ServiceNotifications {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notification", Namespace="http://schemas.datacontract.org/2004/07/DataBase.Db.DbUsers.Models")]
    [System.SerializableAttribute()]
    public partial class Notification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AppearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ToReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryApp.ServiceNotifications.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Appear {
            get {
                return this.AppearField;
            }
            set {
                if ((this.AppearField.Equals(value) != true)) {
                    this.AppearField = value;
                    this.RaisePropertyChanged("Appear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotificationId {
            get {
                return this.NotificationIdField;
            }
            set {
                if ((this.NotificationIdField.Equals(value) != true)) {
                    this.NotificationIdField = value;
                    this.RaisePropertyChanged("NotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToReturn {
            get {
                return this.ToReturnField;
            }
            set {
                if ((this.ToReturnField.Equals(value) != true)) {
                    this.ToReturnField = value;
                    this.RaisePropertyChanged("ToReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryApp.ServiceNotifications.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataBase.Db.DbUsers.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsableBook", Namespace="http://schemas.datacontract.org/2004/07/DataBase.Db.DbBooks")]
    [System.SerializableAttribute()]
    public partial class UsableBook : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CharactersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] GenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumOfRatingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookFormat {
            get {
                return this.BookFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.BookFormatField, value) != true)) {
                    this.BookFormatField = value;
                    this.RaisePropertyChanged("BookFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Characters {
            get {
                return this.CharactersField;
            }
            set {
                if ((object.ReferenceEquals(this.CharactersField, value) != true)) {
                    this.CharactersField = value;
                    this.RaisePropertyChanged("Characters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverImg {
            get {
                return this.CoverImgField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverImgField, value) != true)) {
                    this.CoverImgField = value;
                    this.RaisePropertyChanged("CoverImg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Genres {
            get {
                return this.GenresField;
            }
            set {
                if ((object.ReferenceEquals(this.GenresField, value) != true)) {
                    this.GenresField = value;
                    this.RaisePropertyChanged("Genres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumOfRatings {
            get {
                return this.NumOfRatingsField;
            }
            set {
                if ((this.NumOfRatingsField.Equals(value) != true)) {
                    this.NumOfRatingsField = value;
                    this.RaisePropertyChanged("NumOfRatings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pages {
            get {
                return this.PagesField;
            }
            set {
                if ((this.PagesField.Equals(value) != true)) {
                    this.PagesField = value;
                    this.RaisePropertyChanged("Pages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceNotifications.IServiceNotifications")]
    public interface IServiceNotifications {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendNotificationsReturned", ReplyAction="http://tempuri.org/IServiceNotifications/SendNotificationsReturnedResponse")]
        void SendNotificationsReturned(int bookId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendNotificationsReturned", ReplyAction="http://tempuri.org/IServiceNotifications/SendNotificationsReturnedResponse")]
        System.Threading.Tasks.Task SendNotificationsReturnedAsync(int bookId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendNotificationsNew", ReplyAction="http://tempuri.org/IServiceNotifications/SendNotificationsNewResponse")]
        void SendNotificationsNew(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/SendNotificationsNew", ReplyAction="http://tempuri.org/IServiceNotifications/SendNotificationsNewResponse")]
        System.Threading.Tasks.Task SendNotificationsNewAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/GetUserNotifications", ReplyAction="http://tempuri.org/IServiceNotifications/GetUserNotificationsResponse")]
        LibraryApp.ServiceNotifications.Notification[] GetUserNotifications(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/GetUserNotifications", ReplyAction="http://tempuri.org/IServiceNotifications/GetUserNotificationsResponse")]
        System.Threading.Tasks.Task<LibraryApp.ServiceNotifications.Notification[]> GetUserNotificationsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/RemoveNotification", ReplyAction="http://tempuri.org/IServiceNotifications/RemoveNotificationResponse")]
        void RemoveNotification(int notificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/RemoveNotification", ReplyAction="http://tempuri.org/IServiceNotifications/RemoveNotificationResponse")]
        System.Threading.Tasks.Task RemoveNotificationAsync(int notificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/TimeIsEnding", ReplyAction="http://tempuri.org/IServiceNotifications/TimeIsEndingResponse")]
        LibraryApp.ServiceNotifications.UsableBook[] TimeIsEnding(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNotifications/TimeIsEnding", ReplyAction="http://tempuri.org/IServiceNotifications/TimeIsEndingResponse")]
        System.Threading.Tasks.Task<LibraryApp.ServiceNotifications.UsableBook[]> TimeIsEndingAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceNotificationsChannel : LibraryApp.ServiceNotifications.IServiceNotifications, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceNotificationsClient : System.ServiceModel.ClientBase<LibraryApp.ServiceNotifications.IServiceNotifications>, LibraryApp.ServiceNotifications.IServiceNotifications {
        
        public ServiceNotificationsClient() {
        }
        
        public ServiceNotificationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceNotificationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNotificationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNotificationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendNotificationsReturned(int bookId, int userId) {
            base.Channel.SendNotificationsReturned(bookId, userId);
        }
        
        public System.Threading.Tasks.Task SendNotificationsReturnedAsync(int bookId, int userId) {
            return base.Channel.SendNotificationsReturnedAsync(bookId, userId);
        }
        
        public void SendNotificationsNew(int bookId) {
            base.Channel.SendNotificationsNew(bookId);
        }
        
        public System.Threading.Tasks.Task SendNotificationsNewAsync(int bookId) {
            return base.Channel.SendNotificationsNewAsync(bookId);
        }
        
        public LibraryApp.ServiceNotifications.Notification[] GetUserNotifications(int userId) {
            return base.Channel.GetUserNotifications(userId);
        }
        
        public System.Threading.Tasks.Task<LibraryApp.ServiceNotifications.Notification[]> GetUserNotificationsAsync(int userId) {
            return base.Channel.GetUserNotificationsAsync(userId);
        }
        
        public void RemoveNotification(int notificationId) {
            base.Channel.RemoveNotification(notificationId);
        }
        
        public System.Threading.Tasks.Task RemoveNotificationAsync(int notificationId) {
            return base.Channel.RemoveNotificationAsync(notificationId);
        }
        
        public LibraryApp.ServiceNotifications.UsableBook[] TimeIsEnding(int userId) {
            return base.Channel.TimeIsEnding(userId);
        }
        
        public System.Threading.Tasks.Task<LibraryApp.ServiceNotifications.UsableBook[]> TimeIsEndingAsync(int userId) {
            return base.Channel.TimeIsEndingAsync(userId);
        }
    }
}
