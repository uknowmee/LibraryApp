//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryApp.ServiceRent {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rent", Namespace="http://schemas.datacontract.org/2004/07/DataBase.Db.DbUsers.Models")]
    [System.SerializableAttribute()]
    public partial class Rent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryApp.ServiceRent.Card CardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProlongedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryApp.ServiceRent.Card Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardId {
            get {
                return this.CardIdField;
            }
            set {
                if ((this.CardIdField.Equals(value) != true)) {
                    this.CardIdField = value;
                    this.RaisePropertyChanged("CardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Prolonged {
            get {
                return this.ProlongedField;
            }
            set {
                if ((this.ProlongedField.Equals(value) != true)) {
                    this.ProlongedField = value;
                    this.RaisePropertyChanged("Prolonged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RentId {
            get {
                return this.RentIdField;
            }
            set {
                if ((this.RentIdField.Equals(value) != true)) {
                    this.RentIdField = value;
                    this.RaisePropertyChanged("RentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/DataBase.Db.DbUsers.Models")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerSurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryApp.ServiceRent.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardId {
            get {
                return this.CardIdField;
            }
            set {
                if ((this.CardIdField.Equals(value) != true)) {
                    this.CardIdField = value;
                    this.RaisePropertyChanged("CardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerSurname {
            get {
                return this.OwnerSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerSurnameField, value) != true)) {
                    this.OwnerSurnameField = value;
                    this.RaisePropertyChanged("OwnerSurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryApp.ServiceRent.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataBase.Db.DbUsers.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRent.IServiceRent")]
    public interface IServiceRent {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetUserRents", ReplyAction="http://tempuri.org/IServiceRent/GetUserRentsResponse")]
        LibraryApp.ServiceRent.Rent[] GetUserRents(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/GetUserRents", ReplyAction="http://tempuri.org/IServiceRent/GetUserRentsResponse")]
        System.Threading.Tasks.Task<LibraryApp.ServiceRent.Rent[]> GetUserRentsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/AddNewCard", ReplyAction="http://tempuri.org/IServiceRent/AddNewCardResponse")]
        bool AddNewCard(int userId, string ownerName, string ownerSurname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/AddNewCard", ReplyAction="http://tempuri.org/IServiceRent/AddNewCardResponse")]
        System.Threading.Tasks.Task<bool> AddNewCardAsync(int userId, string ownerName, string ownerSurname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/DeleteCard", ReplyAction="http://tempuri.org/IServiceRent/DeleteCardResponse")]
        bool DeleteCard(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/DeleteCard", ReplyAction="http://tempuri.org/IServiceRent/DeleteCardResponse")]
        System.Threading.Tasks.Task<bool> DeleteCardAsync(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/BorrowBook", ReplyAction="http://tempuri.org/IServiceRent/BorrowBookResponse")]
        bool BorrowBook(int userId, int cardId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/BorrowBook", ReplyAction="http://tempuri.org/IServiceRent/BorrowBookResponse")]
        System.Threading.Tasks.Task<bool> BorrowBookAsync(int userId, int cardId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/ProlongBook", ReplyAction="http://tempuri.org/IServiceRent/ProlongBookResponse")]
        bool ProlongBook(int userId, int cardId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/ProlongBook", ReplyAction="http://tempuri.org/IServiceRent/ProlongBookResponse")]
        System.Threading.Tasks.Task<bool> ProlongBookAsync(int userId, int cardId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/ReturnBook", ReplyAction="http://tempuri.org/IServiceRent/ReturnBookResponse")]
        bool ReturnBook(int userId, int cardId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRent/ReturnBook", ReplyAction="http://tempuri.org/IServiceRent/ReturnBookResponse")]
        System.Threading.Tasks.Task<bool> ReturnBookAsync(int userId, int cardId, int bookId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRentChannel : LibraryApp.ServiceRent.IServiceRent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRentClient : System.ServiceModel.ClientBase<LibraryApp.ServiceRent.IServiceRent>, LibraryApp.ServiceRent.IServiceRent {
        
        public ServiceRentClient() {
        }
        
        public ServiceRentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceRentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LibraryApp.ServiceRent.Rent[] GetUserRents(int userId) {
            return base.Channel.GetUserRents(userId);
        }
        
        public System.Threading.Tasks.Task<LibraryApp.ServiceRent.Rent[]> GetUserRentsAsync(int userId) {
            return base.Channel.GetUserRentsAsync(userId);
        }
        
        public bool AddNewCard(int userId, string ownerName, string ownerSurname) {
            return base.Channel.AddNewCard(userId, ownerName, ownerSurname);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewCardAsync(int userId, string ownerName, string ownerSurname) {
            return base.Channel.AddNewCardAsync(userId, ownerName, ownerSurname);
        }
        
        public bool DeleteCard(int cardId) {
            return base.Channel.DeleteCard(cardId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCardAsync(int cardId) {
            return base.Channel.DeleteCardAsync(cardId);
        }
        
        public bool BorrowBook(int userId, int cardId, int bookId) {
            return base.Channel.BorrowBook(userId, cardId, bookId);
        }
        
        public System.Threading.Tasks.Task<bool> BorrowBookAsync(int userId, int cardId, int bookId) {
            return base.Channel.BorrowBookAsync(userId, cardId, bookId);
        }
        
        public bool ProlongBook(int userId, int cardId, int bookId) {
            return base.Channel.ProlongBook(userId, cardId, bookId);
        }
        
        public System.Threading.Tasks.Task<bool> ProlongBookAsync(int userId, int cardId, int bookId) {
            return base.Channel.ProlongBookAsync(userId, cardId, bookId);
        }
        
        public bool ReturnBook(int userId, int cardId, int bookId) {
            return base.Channel.ReturnBook(userId, cardId, bookId);
        }
        
        public System.Threading.Tasks.Task<bool> ReturnBookAsync(int userId, int cardId, int bookId) {
            return base.Channel.ReturnBookAsync(userId, cardId, bookId);
        }
    }
}
